}
mean(readsfile[pollutant]), na.rm = T)
}
pollutantmean <- function(directory, pollutant, id=1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
readsfile <-read.csv(datafiles[i])
}
mean(readsfile, pollutant), na.rm = T)
}
pollutantmean(specdata, nitrate, 1)
pollutantmean <- function(directory, pollutant, id=1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
readsfile <-read.csv(datafiles[i])
}
mean(readsfile, pollutant), na.rm = T)
}
pollutantmean <- function(directory, pollutant, id=1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
readsfile <-read.csv(datafiles[i])
}
mean(readsfile, pollutant), na.rm = T)
}
pollutantmean <- function(directory, pollutant, id=1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
readsfile <-read.csv(datafiles[i])
}
mean(readsfile, pollutant), na.rm = T)
}
pollutantmean <- function(directory, pollutant, id=1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
readsfile <-read.csv(datafiles[i])
}
mean(readsfile, pollutant), na.rm = T)
}
pollutantmean <- function(directory, pollutant, id=1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
readsfile <-read.csv(datafiles[i])
}
mean(readsfile, pollutant), na.rm = T)
}
pollutantmean(specdata, nitrate, 1)
pollutantmean <- function(directory, pollutant, id=1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
readsfile <-read.csv(datafiles[i])
}
mean(readsfile, pollutant), na.rm = T)
}
pollutantmean <- function(directory, pollutant, id=1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
readsfile <-read.csv(datafiles[i])
}
mean(readsfile[pollutant], na.rm = T )
}
pollutantmean(specdata, nitrate, 1)
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
gul <- read.csv(datafiles[i])}
mean(gul[,pollutant],na.rm = T)
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
gul <- read.csv(datafiles[i])}
mean(gul[pollutant],na.rm = T)
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
gul <- read.csv(datafiles[i])}
mean(gul[,pollutant],na.rm = T)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
nobs <- numeric()
for (i in id) {
gul <- read.csv(datafiles[i])}
mean(gul[,pollutant],na.rm = T)
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
nobs <- numeric()
for (i in id) {
gul <- read.csv(datafiles[i])}
mean(nobs, gul[,pollutant],na.rm = T)
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
}
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
nobs <- numeric()
for (i in id) {
gul <- read.csv(datafiles[i])}
mean(!is.na(gul[,pollutant]))
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
nobs <- numeric()
for (i in id) {
gul <- read.csv(datafiles[i])}
mean(!is.na(gul[pollutant]))
}
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
nobs <- numeric()
for (i in id) {
gul <- read.csv(datafiles[i])}
mean(!is.na(gul[pollutant]))
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 10)
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
gul <- read.csv(datafiles[i])
mean(!is.na(gul), pollutant)
}
}
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
gul <- read.csv(datafiles[i])
average <- mean(!is.na(gul), pollutant)
}
return(average)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
for (i in id) {
gul <- read.csv(datafiles[i])
average <- mean(!is.na(gul), pollutant)
}
return(average)
}
pollutantmean("specdata", "sulfate", 1:10)
nums <- c(1,2,3,4,6)
nums <- c(1,2,3,4,6)
dup <- numeric()
nums
dup
nums
dup
nums
dup
for (i in nums) {
dup <- c(dup, i)
}
dup
for (i in nums) {
dup <- c(i)
}
for (i in nums) {
dup <- c(i)
}
dup
data <- read.csv('C:\\Users\\gulmu\\specdata\\001.csv')
data$sulfate
mean(data$sulfate)
mean(data$sulfate, na.rm=T)
pollutantmean <- function(directory, pollutant, id= 1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
nobs <- numeric()
for (i in id) {
readfiles <- read.csv(datafiles[i])
nobs <- c(nobs, readfiles[[pollutant]])
}
mean(nobs, na.rm= T)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
complete <- function(directory, id=1:332){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
nobs <- numeric()
for (i in id) {
readsfile <-sum(complete.cases(read.csv(datafiles[i])))
nobs <- c(nobs, readsfile)
}
return(data.frame(id, nobs))
}
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
corr <- function(directory, threshold = 0){
datafiles <- list.files('C:\\Users\\gulmu\\specdata', pattern = "*.csv", full.names = T)
id <- 1:332
correlation <- c()
for (i in 1:332) {
readsfile <-read.csv(datafiles[i])
if (sum(complete.cases(readsfile))>threshold){
correlation <- c(correlation, cor(readsfile$sulfate, readsfile$nitrate, use = "pairwise.complete.obs"))
}
}
correlation
}
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
print(c(n, round(cr, 4)))
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
setwd("~/")
rpois(5,2)
?dpois
?qpois
rpois(5,2)
rpois(5,2)
set.seed(2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(2)
rpois(5,2)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
set.seed(1)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(y)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(y)
rbinom(100)
rbinom(100, 1)
rbinom(100, 1, 2)
?rbinom
library(ggplot2)
iris <- cbind(iris, pca$x)
View(iris)
ggplot(iris, aes(PC1, PC2, color=iris$Species, fill = iris$Species))+
stat_ellipse(geom = "polygon", col = "black", alpha= 0.5)+
geom_point(shape= 21, col = "black")
iris <- cbind(iris, pca$x)
pca
#principal component analysis
pca <- prcomp(iris[, -5], center= T, #to centralize the data,
scale. = T, #when data has two different units.
)
pca
iris <- cbind(iris, pca$x)
ggplot(iris, aes(PC1, PC2, color=iris$Species, fill = iris$Species))+
stat_ellipse(geom = "polygon", col = "black", alpha= 0.5)+
geom_point(shape= 21, col = "black")
ggplot(iris, aes(PC1, PC2, color=Species, fill = Species))+
stat_ellipse(geom = "polygon", col = "black", alpha= 0.5)+
geom_point(shape= 21, col = "black")
#PCA plot
install.packages("factoextra")
library(factoextra)
install.packages("FactoMineR")
library(FactoMineR)
iris.pca <- PCA(iris[,-5], graph=T, scale.unit=T)
fviz_eig(iris.pca, addlabels = TRUE, ylim=c(0,80))
fviz_pca_var(iris.pca, col.var = "cos2",
gradient.col=c("#FFCC00", "#CC9933", "#660033", "#330033"))
fviz_pca_var(iris.pca, col.var = "cos2",
gradient.col=c("#FFCC00", "#CC9933", "#660033", "#330033"), repel =T)
fviz_pca_var(iris.pca, col.var = "cos2",
gradient.col=c("#FFCC00", "#CC9933", "#660033", "#330033"), repel =T)+
labs(title = "PCA Parameters", x="PC1 (83.3%)", y="PC2 (6.8%)",
colour = "Treatments") )
fviz_pca_var(iris.pca, col.var = "cos2",
gradient.col=c("#FFCC00", "#CC9933", "#660033", "#330033"), repel =T)+
labs(title = "PCA Parameters", x="PC1 (83.3%)", y="PC2 (6.8%)",
colour = "Treatments")
fviz_pca_var(iris.pca, col.var = "cos2",
gradient.col=c("#FFCC00", "#CC9933", "#660033", "#330033"), repel =T)+
labs(title = "PCA Parameters", x="PC1 (83.3%)", y="PC2 (6.8%)",
colour = "cos2")
fviz_pca_var(iris.pca, col.var = "cos2",
gradient.col=c("#FFCC00", "#CC9933", "#660033", "#330033"), repel =T)+
labs(title = "PCA Parameters", x="PC1 (83.3%)", y="PC2 (6.8%)",
colour = "cos2")+
ggsave("PCA.png", units = "in", width = 6.5, height = 5.5)
setwd("~/")
setwd("D:/R-files/Tufail")
setwd("D:/R-files/Tufail/TufailRProgramming")
#install packages for correlation
install.packages("psych")
install.packages("corrplot")
install.packages("RColorBrewer")
library(psych, corrplot, RColorBrewer)
install.packages("RColorBrewer")
library(psych, corrplot, RColorBrewer)
library(psych, corrplot, RColorBrewer)
library(RColorBrewer)
library(psych, corrplot)
#package psych
data(iris)
x <- corr.test(iris[-5)
x <- corr.test(iris[-5)
x <- corr.test(iris[-5])
pairs.panels(iris[-5])
x
x <- corr.test(iris[-5])
x
#corrplot
#corrplot
x1 <- cor(iris[-5])
x1
corrplot(x1)
corrplot(x1)
library(corrplot)
install.packages("corrplot")
install.packages("corrplot")
corrplot(x1)
install.packages("corrplot")
library(corrplot)
#corrplot
x1 <- cor(iris[-5])
corrplot(x1)
data()
head(co2)
ncol(CO2)
ncol(tree)
ncol(Tree)
ncol(Trees)
ncol(ToothGrowth)
ncol(Orange)
ncol(DNase)
ncol(mtcars)
head(mtcars)
#corrplot
x1 <- cor(mtcars[-1])
x1
corrplot(x1)
corrplot(x1, type = upper)
corrplot(x1, type = "upper")
corrplot(x1, type = "lower")
corrplot(x1, type = "full")
corrplot(x1, type = "upper", order="hclust")
#pie shape
corrplot(x1, type = "upper", order="hclust", method = "pie")
corrplot(x1, type = "upper", order="hclust", method = "elipse")
corrplot(x1, type = "upper", order="hclust", method = "ellipse")
corrplot(x1, type = "upper", order="hclust", method = "square")
corrplot(x1, type = "upper", order="hclust", method = "shade")
corrplot(x1, type = "upper", order="hclust", method = "number")
corrplot(x1, type = "upper", order="hclust", method = "pie",
color=brewer.pal(n=8, name=RdYlBu))
corrplot.mixed(x1)
corrplot.mixed(x1, lower = "black", number.cex = 0.7)
corrplot.mixed(x1, lower.col  = "black", number.cex = 0.7)
corrplot.mixed(x1, lower.col  = "black", number.cex = 0.8)
corrplot.mixed(x1, lower = "square", upper = "pie", color= "red")
corrplot.mixed(x1, lower = "square", upper = "pie", t1.color= "red")
corrplot.mixed(x1, lower = "square", upper = "pie", t1.color= "Red")
corrplot.mixed(x1, lower = "square", upper = "pie", t1.col= "Red")
corrplot.mixed(x1, lower = "square", upper = "pie", t1.col= "red")
corrplot.mixed(x1, lower = "square", upper = "pie", tl.col= "red")
?corrplot.mixed
corrplot.mixed(x1, lower = "square", upper = "pie", tl.col= "red")
corrplot.mixed(x1, lower = "square", upper = "pie", tl.col= "red")
corrplot.mixed(x1, lower = "square", upper = "pie", tl.col= "Blue")
corrplot.mixed(x1, lower = "number", upper = "pie", tl.col= "Blue")
corrplot.mixed(x1, lower = "number", upper = "pie", tl.col= "red")
x1 <- cor(mtcars[-1], "spearman")
x1 <- cor(mtcars[,-1], "spearman")
x1 <- cor(mtcars[-1])
x1
x1 <- cor(mtcars[-1], "spearman")
x1 <- cor(mtcars[,-1], "spearman")
x1 <- cor(mtcars[,-1], "pearson")
x1 <- cor(mtcars[,-1], "pearson")
x1 <- cor(mtcars[-1], "pearson")
View(x1)
x1 <- cor(mtcars[-1],method =  "pearson")
x1 <- cor(mtcars[-1],method =  "spearman")
setwd("D:/R-files/Tufail/TufailRProgramming")
data(mtcars)
x <- mtcars
heatmap(x)
x <-as.matrix(mtcars)
heatmap(x)
heatmap(x, scale = "column")
#another way to generate map
install.packages(gplots)
#another way to generate map
install.packages("gplots")
library(gplots)
heatmap.2(x, scale = "column", col = "Blue")
heatmap.2(x, scale = "column", col = "blue")
heatmap.2(x, scale = "column", col = bluered(100))
heatmap.2(x, scale = "column", col = bluered(100),
trace="none")
data(mtcars)
heatmap.2(x, scale = "column", col = bluered(100),
trace="none")
heatmap.2(x, scale = "column", col = bluered(100),
trace="none")
heatmap.2(x, scale = "column", col = bluered(100),
trace="none")
heatmap.2(x, scale = "column", col = bluered(100)
heatmap.2(x, scale = "column", col = bluered(100)),
trace="none")
heatmap.2(x, scale = "column", col = bluered(100)),
trace="none")
heatmap.2(x, scale = "column", col = bluered(100))
heatmap.2(x, scale = "column", col = bluered(100))
heatmap.2(x, scale = "column", col = bluered(100))
heatmap.2(x, scale = "column", col = bluered(100))
heatmap.2(x, scale = "column", col = bluered(100))
heatmap.2(x, scale = "column", col = bluered(100))
heatmap.2(x, scale = "column"
heatmap.2(x, scale = "column")
heatmap.2(x
heatmap.2(x)
heatmap.2(x)
heatmap.2(x)
library(gplots)
heatmap.2(x), scale = "column"), col = bluered(100))
heatmap.2(x), scale = "column", col = bluered(100))
heatmap.2(x), scale = "column", col = bluered(100))
heatmap.2(x, scale = "column", col = bluered(100))
heatmap.2(x, scale = "column", col = bluered(100))
#3rd kind of heatmap
install.packages("pheatmap")
library(pheatmap)
pheatmap(x, scale = "column")
pheatmap(x, scale = "column")
pheatmap(x, scale = "column")
x <-as.matrix(mtcars)
heatmap(x, scale = "column")
heatmap(x)
x <- mtcars
heatmap(x)
x <-as.matrix(mtcars)
heatmap(x, scale = "column")
heatmap(x, scale = "column")
heatmap(x, scale = "column")
x <- mtcars
heatmap(x)
x <-as.matrix(mtcars)
pheatmap(x, scale = "column")
